# sources
# https://rhonabwy.com/2020/05/09/continuous-integration-with-github-actions-for-macos-and-ios-projects/
# https://github.com/Apple-Actions/Example-iOS/blob/master/.github/workflows/test.yml
# https://medium.com/@karaiskc/archive-and-export-ios-app-with-github-actions-b44f676e4bf9
# https://leenarts.net/2020/02/12/github-actions-for-ios-projects/
# https://github.com/actions/upload-release-asset
# https://medium.com/@Extrawurst/github-actions-homebrew-%EF%B8%8F-2789ae5023fd


#########################################
# üö® CONFIGURE SECRETS ON YOUR REPO üö® #
#########################################
# guide https://github.com/Apple-Actions
# goto https://github.com/twostraws/ControlRoom/settings/secrets
#
# CERTIFICATES_FILE_BASE64
# CERTIFICATES_PASSWORD
# APPSTORE_ISSUER_ID
# APPSTORE_KEY_ID
# APPSTORE_PRIVATE_KEY

name: Release macOS app

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:

  build_sign:
    name: Swift Build
    runs-on: macos-latest
    strategy:
      matrix:
        run-config:
          - { scheme: 'Release - ControlRoom', destination: 'platform=macOS' }

    steps:

    - name: Cancel redundant jobs
      uses: technote-space/auto-cancel-redundant-job@v1

    - name: Checkout Project
      uses: actions/checkout@v2

    #- name: Homebrew build helpers install
    #  run: brew bundle

    #- name: Select Xcode 12
    #  run: sudo xcode-select -switch /Applications/Xcode_12_beta.app

    - name: Show the currently detailed version of Xcode for CLI
      run: xcode-select -p

    - name: Show Build Settings
      run: xcodebuild -project ControlRoom.xcodeproj -scheme '${{ matrix.run-config['scheme'] }}' -showBuildSettings

    - name: Show Build SDK
      run: xcodebuild -project ControlRoom.xcodeproj -scheme '${{ matrix.run-config['scheme'] }}' -showsdks

    - name: Show Available Destinations
      run: xcodebuild -project ControlRoom.xcodeproj -scheme '${{ matrix.run-config['scheme'] }}' -showdestinations

    #- name: lint
    #  run: swift format lint --configuration .swift-format-config -r .

    - name: "‚öíÔ∏è Build"
      run: |
        xcodebuild clean build
          -scheme '${{ matrix.run-config['scheme'] }}' \
          -destination '${{ matrix.run-config['destination'] }}' \
          -derivedDataPath DerivedData \
          -archivePath DerivedData/Archive/ControlRoom archive \
          -showBuildTimingSummary

    - name: Codesign - Import Certs
      uses: Apple-Actions/import-codesign-certs@v1
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_FILE_BASE64 }}
        p12-password: ${{ secrets.CERTIFICATES_PASSWORD }}

    - name: Codesign - Download Provisioning Profiles
      uses: Apple-Actions/download-provisioning-profiles@v1
      with:
        bundle-id: com.hackingwithswift.ControlRoom
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}

    - name: Export Archive
      run: |
        xcodebuild -exportArchive \
          -archivePath DerivedData/Archive/ControlRoom.xcarchive \
          -exportOptionsPlist provisioning/App-Store.plist \
          -exportPath DerivedData/ipa

    - name: Cache build
      id: cache-ipa
      uses: actions/cache@v2
      with:
        path: DerivedData/ipa/ControlRoom.ipa
        key: ControlRoom-IPA


  release:
    needs: build_sign
    name: Create Release & Upload Assets
    runs-on: ubuntu-latest

    steps:

      - name: Fetch build
        id: cache-ipa
        uses: actions/cache@v2
        with:
          path: DerivedData/ipa/ControlRoom.ipa
          key: ControlRoom-IPA

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./DerivedData/ipa/ControlRoom.ipa
          asset_name: ControlRoom-macOS.ipa
          asset_content_type: application/octet-stream

  homebrew:
    needs: build_sign
    name: Create Release
    runs-on: ubuntu-latest

    steps:

      # TODO: homebrew
      - name: Homebrew
        run: echo "Not yet implemented ! üö®üö®üö®"
